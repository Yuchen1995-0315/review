1.在关系型数据库中，索引（index）存在的意义是什么？
    （1）通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。
    （2）可以大大加快数据的检索速度，这也是创建索引的最主要的原因。
    （3）可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。
    （4）在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。
    （5）通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能

2.你用的mysql是哪个引擎，各引擎之间有什么区别？
    主要 MyISAM 与 InnoDB 两个引擎，其主要区别如下：
    InnoDB 支持事务，MyISAM 不支持，这一点是非常之重要。事务是一种高级的处理方式，如在一些列增删改中只要哪个出错还可以回滚还原，而 MyISAM就不可以了；
    MyISAM 适合查询以及插入为主的应用，InnoDB 适合频繁修改以及涉及到安全性较高的应用；
    InnoDB 支持外键，MyISAM 不支持；
    MyISAM 是默认引擎，InnoDB 需要指定；
    InnoDB 不支持 FULLTEXT 类型的索引；
    InnoDB 中不保存表的行数，如 select count(*) from table 时，InnoDB；需要扫描一遍整个表来计算有多少行，但是 MyISAM 只要简单的读出保存好的行数即可。注意的是，当 count(*)语句包含 where 条件时 MyISAM 也需要扫描整个表；
    对于自增长的字段，InnoDB 中必须包含只有该字段的索引，但是在 MyISAM表中可以和其他字段一起建立联合索引；清空整个表时，InnoDB 是一行一行的删除，效率非常慢。MyISAM 则会重建表；
    InnoDB 支持行锁（某些情况下还是锁整表，如 update table set a=1 where user like '%lee%'

3.数据库优化方案
    优化索引、SQL 语句、分析慢查询
    设计表的时候严格根据数据库的设计范式来设计数据库
    使用缓存，把经常访问到的数据而且不需要经常变化的数据放在缓存中，能节约磁盘IO
    优化硬件；采用SSD，使用磁盘队列技术(RAID0,RAID1,RDID5)等；
    采用MySQL 内部自带的表分区技术，把数据分层不同的文件，能够提高磁盘的读取效率
    垂直分表；把一些不经常读的数据放在一张表里，节约磁盘I/O
    主从分离读写；采用主从复制把数据库的读操作和写入操作分离开来
    分库分表分机器（数据量特别大），主要的的原理就是数据路由
    选择合适的表引擎，参数上的优化
    进行架构级别的缓存，静态化和分布式
    不采用全文索引
    采用更快的存储方式，例如NoSql存储经常访问的数据